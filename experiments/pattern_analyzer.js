// Pattern max:
var pattern_max = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\k<n1>\]\,\[\k<l1>\,\k<n0>\]`
var pattern_max_2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\k<n1>\]\,\[\]\,\[\]\,\[\k<l1>\,\k<n0>\]\,\[\]\,\[\]`

// Pattern min:
var pattern_min = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\k<n0>\]\,\[\k<l1>\,\k<n1>\]`
var pattern_min_2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\k<n0>\]\,\[\]\,\[\]\,\[\k<l1>\,\k<n1>\]\,\[\]\,\[\]`

// Pattern 1 and 2:
var pattern1n2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n0>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\[\k<n2>\,\k<n1>\]\]\,\[(?<l3>[0-9]+)\,\k<n2>\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l2>\,\[\k<n0>\,(?<n3>[0-9]+)\]\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l1>\,\[\k<n2>\,\k<n1>\]\]\,\[\k<l2>\,\[\k<n3>\,\k<n1>\]\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l2>\,\[\k<n0>\,\k<n2>\]\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l3>\,\k<n2>\]`;

// Pattern 3 and 3:
var pattern3n3 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n0>\]\]\,\[(?<l2>[0-9]+)\,\[(?<n3>[0-9]+)\,\k<n0>\]\]\,\[(?<l3>[0-9]+)\,\k<n3>\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l2>\,\[\k<n2>\,\k<n1>\]\]\,\[\k<l3>\,\k<n2>\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l1>\,\[\k<n2>\,\k<n1>\]\]\,\[\k<l2>\,\[\k<n3>\,\k<n1>\]\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l2>\,\[\k<n2>\,\k<n0>\]\]\,\[\k<l3>\,\k<n2>\]\,\[\k<l3>\,\k<n0>\]`;

// Pattern 4 and 4:
var pattern4n4 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\[\k<n2>\,\k<n0>\]\]\,\[(?<l3>[0-9]+)\,\k<n0>\]\,\[\k<l3>\,\k<n2>\]\,\[\k<l2>\,\[(?<n3>[0-9]+)\,\k<n1>\]\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l1>\,\[\k<n2>\,\k<n0>\]\]\,\[\k<l2>\,\[\k<n2>\,\k<n1>\]\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l3>\,\k<n2>\]\,\[\k<l2>\,\[\k<n3>\,\k<n0>\]\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l3>\,\k<n3>\]`;

// Pattern 5 and 6:
var pattern5n6 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\[\k<n0>\,\k<n2>\]\]\,\[(?<l3>[0-9]+)\,\k<n2>\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l2>\,\[(?<n3>[0-9]+)\,\k<n1>\]\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l1>\,\[\k<n0>\,\k<n2>\]\]\,\[\k<l2>\,\[\k<n0>\,\k<n3>\]\]\,\[\k<l3>\,\k<n3>\]\,\[\k<l3>\,\k<n0>\]\,\[\k<l2>\,\[\k<n2>\,\k<n1>\]\]\,\[\k<l3>\,\k<n1>\]\,\[\k<l3>\,\k<n2>\]`;

// Pattern 5 and 6 again:
var pattern5n = String.raw``;

// Pattern 1:   
var pattern_select_1_4_ab_cd__1 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n1>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\k<n1>\],\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\[\k<n0>\,(?<n3>[0-9]+)\]\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l2>\,\k<n3>\]`;

// Pattern 2:   
var pattern_select_1_4_ab_cd__2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l1>\,\[(?<n3>[0-9]+)\,\k<n0>\]\]\,\[\k<l2>\,\k<n3>\]\,\[\k<l2>\,\k<n0>\]`;

// Pattern 3:   
var pattern_select_1_4_ab_cd__3 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l1>\,\[\k<n0>\,(?<n3>[0-9]+)\]\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l2>\,\k<n3>\]`;

var pattern_select_1_4_ab_cd__4 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l1>\,\[\k<n0>\,(?<n3>[0-9]+)\]\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l2>\,\k<n3>\]`

var pattern_select_1_4_ab_cd__5 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n1>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\k<n1>\]\,\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\[(?<n3>[0-9]+)\,\k<n0>\]\]\,\[\k<l2>\,\k<n3>\]\,\[\k<l2>\,\k<n0>\]`







// Pattern 4:   
var pattern_select_2_4_ab_cd__1 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n0>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l1>\,\[(?<n3>[0-9]+)\,\k<n1>\]\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l2>\,\k<n3>\]`;


// Pattern 5:   
var pattern_select_2_4_ab_cd__2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n0>\]\]\,\[(?<l2>[0-9]+)\,\k<n0>\]\,\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\[(?<n3>[0-9]+)\,\k<n1>\]\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l2>\,\k<n3>\]`;

// Pattern 6:   
var pattern_select_2_4_ab_cd__3 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n0>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l1>\,\[\k<n1>\,(?<n3>[0-9]+)\]\]\,\[\k<l2>\,\k<n3>\]\,\[\k<l2>\,\k<n1>\]`






var pattern_select_0_3 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[\k<n0>\,(?<n2>[0-9]+)\]\]\,\[(?<l2>[0-9]+)\,\k<n0>\]\,\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\[\k<n1>\,\k<n2>\]\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l2>\,\k<n2>\]`

var pattern_select_2_3 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\k<n1>\]\,\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\[\k<n2>\,\k<n0>\]\]\,\[\k<l2>\,\k<n0>\]\,\[\k<l2>\,\k<n2>\]`

var pattern_select_1_3_ab__1 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n0>\]\]\,\[(?<l2>[0-9]+)\,\k<n0>\]\,\[\k<l2>\,\k<n2>\]\,\[\k<l1>\,\k<n1>\]\,\[\]\,\[\]`
    
var pattern_select_1_3_ab__2 = String.raw`\[(?<l0>[0-9]+)\,\[(?<n0>[0-9]+)\,(?<n1>[0-9]+)\]\]\,\[(?<l1>[0-9]+)\,\[(?<n2>[0-9]+)\,\k<n1>\]\]\,\[(?<l2>[0-9]+)\,\k<n2>\]\,\[\k<l2>\,\k<n1>\]\,\[\k<l1>\,\k<n0>\]\,\[\]\,\[\]`





var pattern_xxx = String.raw``

// ---------------------------------------------------------------

var pattern_indenter_1 = String.raw`\[(?<l0>[0-9]+)\,\[[0-9]+\,[0-9]+\]\]\,`
var pattern_indenter_2 = String.raw`\[(?<l0>[0-9]+)\,[0-9]+\]\,`
var pattern_indenter_3 = String.raw`select_[0-9]+_[0-9]+_ab_cd\([0-9]+\, [0-9]+\, [0-9]+\, [0-9]+\);\,`
    

// ---------------------------------------------------------------
// Nota: se necesita el arbol completo para poder hacer el anÃ¡lisis, con las hojas incluÃ­das, usar: median_n_array_complete_generator.js
var data_n5 = "[[0,[1,2]],[1,[3,4]],[2,[1,3]],[3,[2,5]],[4,[2,3]],[5,[3,5]],[6,3],[6,5],[5,[2,4]],[6,2],[6,4],[4,[3,5]],[5,[4,5]],[6,4],[6,5],[5,[2,3]],[6,2],[6,3],[3,[4,5]],[4,[1,4]],[5,[2,4]],[6,2],[6,4],[5,[1,5]],[6,1],[6,5],[4,[1,5]],[5,[2,5]],[6,2],[6,5],[5,[1,4]],[6,1],[6,4],[2,[1,4]],[3,[2,5]],[4,[2,4]],[5,[4,5]],[6,4],[6,5],[5,[2,3]],[6,2],[6,3],[4,[4,5]],[5,[3,5]],[6,3],[6,5],[5,[2,4]],[6,2],[6,4],[3,[3,5]],[4,[1,3]],[5,[2,3]],[6,2],[6,3],[5,[1,5]],[6,1],[6,5],[4,[1,5]],[5,[2,5]],[6,2],[6,5],[5,[1,3]],[6,1],[6,3],[1,[3,4]],[2,[1,4]],[3,[3,5]],[4,[1,5]],[5,[1,3]],[6,3],[6,1],[5,[2,5]],[6,5],[6,2],[4,[1,3]],[5,[1,5]],[6,5],[6,1],[5,[2,3]],[6,3],[6,2],[3,[2,5]],[4,[4,5]],[5,[2,4]],[6,4],[6,2],[5,[3,5]],[6,5],[6,3],[4,[2,4]],[5,[2,3]],[6,3],[6,2],[5,[4,5]],[6,5],[6,4],[2,[1,3]],[3,[4,5]],[4,[1,5]],[5,[1,4]],[6,4],[6,1],[5,[2,5]],[6,5],[6,2],[4,[1,4]],[5,[1,5]],[6,5],[6,1],[5,[2,4]],[6,4],[6,2],[3,[2,5]],[4,[3,5]],[5,[2,3]],[6,3],[6,2],[5,[4,5]],[6,5],[6,4],[4,[2,3]],[5,[2,4]],[6,4],[6,2],[5,[3,5]],[6,5],[6,3]]";

var data_n7 = "[[0,[1,2]],[1,[3,4]],[2,[2,4]],[3,[5,6]],[4,[2,6]],[5,[2,5]],[6,[5,7]],[7,[3,5]],[8,[4,5]],[9,4],[],[],[9,5],[],[],[8,[3,6]],[9,[3,7]],[10,3],[10,7],[9,[6,7]],[10,6],[10,7],[7,[2,7]],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,[3,5]],[10,3],[10,5],[8,[3,5]],[9,[2,3]],[10,3],[10,2],[9,5],[],[],[6,[3,7]],[7,[2,7]],[8,[3,6]],[9,[2,3]],[10,3],[10,2],[9,6],[],[],[8,[5,7]],[9,[1,7]],[10,7],[10,1],[9,[1,5]],[10,5],[10,1],[7,[2,3]],[8,[2,7]],[9,[6,7]],[10,6],[10,7],[9,2],[],[],[8,[3,5]],[9,[1,5]],[10,5],[10,1],[9,[1,3]],[10,3],[10,1],[5,[1,3]],[6,[3,7]],[7,[3,5]],[8,[5,7]],[9,[6,7]],[10,6],[10,7],[9,5],[],[],[8,[3,6]],[9,[6,7]],[10,6],[10,7],[9,[2,3]],[10,2],[10,3],[7,[6,7]],[8,[2,7]],[9,2],[],[],[9,[1,7]],[10,7],[10,1],[8,[3,6]],[9,[3,5]],[10,5],[10,3],[9,[1,6]],[10,6],[10,1],[6,[3,5]],[7,[1,7]],[8,[6,7]],[9,[1,6]],[10,6],[10,1],[9,[5,7]],[10,7],[10,5],[8,[1,6]],[9,[1,5]],[10,5],[10,1],[9,[6,7]],[10,7],[10,6],[7,[6,7]],[8,[1,7]],[9,[1,6]],[10,6],[10,1],[9,[3,7]],[10,7],[10,3],[8,[1,6]],[9,[1,7]],[10,7],[10,1],[9,[3,6]],[10,6],[10,3],[4,[2,5]],[5,[2,6]],[6,[3,7]],[7,[6,7]],[8,[3,6]],[9,[4,6]],[10,4],[10,6],[9,[3,5]],[10,3],[10,5],[8,[2,7]],[9,[4,7]],[10,4],[10,7],[9,2],[],[],[7,[3,5]],[8,[3,6]],[9,[2,3]],[10,3],[10,2],[9,[6,7]],[10,7],[10,6],[8,[5,7]],[9,5],[],[],[9,[6,7]],[10,7],[10,6],[6,[3,7]],[7,[2,7]],[8,[3,5]],[9,[2,3]],[10,3],[10,2],[9,5],[],[],[8,[1,6]],[9,[6,7]],[10,7],[10,6],[9,[1,7]],[10,7],[10,1],[7,[2,3]],[8,[5,7]],[9,5],[],[],[9,[2,7]],[10,7],[10,2],[8,[1,3]],[9,[3,6]],[10,6],[10,3],[9,[1,6]],[10,6],[10,1],[5,[3,5]],[6,[1,3]],[7,[5,7]],[8,5],[],[],[],[],[],[],[8,[3,6]],[9,[6,7]],[10,7],[10,6],[9,[3,7]],[10,7],[10,3],[7,[1,7]],[8,[5,7]],[9,[1,5]],[10,5],[10,1],[9,[6,7]],[10,7],[10,6],[8,[1,5]],[9,[1,6]],[10,6],[10,1],[9,[5,7]],[10,7],[10,5],[6,[5,7]],[7,[3,7]],[8,[1,3]],[9,[2,3]],[10,2],[10,3],[9,[1,7]],[10,1],[10,7],[8,[1,7]],[9,[2,7]],[10,2],[10,7],[9,[1,3]],[10,1],[10,3],[7,[1,3]],[8,[1,5]],[9,5],[],[],[9,1],[],[],[8,3],[],[],[],[],[],[],[3,[5,6]],[4,[1,7]],[5,[4,6]],[6,[4,5]],[7,[5,7]],[8,[1,5]],[9,[2,5]],[10,2],[10,5],[9,[1,6]],[10,1],[10,6],[8,[2,7]],[9,2],[],[],[9,[4,7]],[10,7],[10,4],[7,[4,7]],[8,[1,4]],[9,4],[],[],[9,[1,6]],[10,1],[10,6],[8,[3,5]],[9,[5,7]],[10,7],[10,5],[9,[3,7]],[10,7],[10,3],[6,[1,3]],[7,[3,7]],[8,[6,7]],[9,[3,6]],[10,6],[10,3],[9,[5,7]],[10,7],[10,5],[8,[3,6]],[9,[3,5]],[10,5],[10,3],[9,[6,7]],[10,7],[10,6],[7,[5,7]],[8,[1,6]],[9,[6,7]],[10,6],[10,7],[9,[1,4]],[10,1],[10,4],[8,5],[],[],[],[],[],[],[5,[3,5]],[6,[5,7]],[7,[4,6]],[8,[4,7]],[9,[6,7]],[10,6],[10,7],[9,[1,4]],[10,1],[10,4],[8,[6,7]],[9,[4,7]],[10,4],[10,7],[9,[1,6]],[10,1],[10,6],[7,[1,4]],[8,[1,5]],[9,[4,5]],[10,4],[10,5],[9,[1,6]],[10,1],[10,6],[8,[4,5]],[9,[1,5]],[10,1],[10,5],[9,[4,6]],[10,4],[10,6],[6,[1,4]],[7,[3,6]],[8,[1,6]],[9,[1,3]],[10,3],[10,1],[9,[6,7]],[10,7],[10,6],[8,[1,3]],[9,[1,6]],[10,6],[10,1],[9,[3,7]],[10,7],[10,3],[7,[6,7]],[8,[4,7]],[9,[4,6]],[10,6],[10,4],[9,[3,7]],[10,7],[10,3],[8,[4,6]],[9,[4,7]],[10,7],[10,4],[9,[3,6]],[10,6],[10,3],[4,[4,5]],[5,[1,4]],[6,[6,7]],[7,[4,7]],[8,[2,6]],[9,2],[],[],[9,[4,6]],[10,6],[10,4],[8,[1,3]],[9,[3,7]],[10,7],[10,3],[9,[1,7]],[10,7],[10,1],[7,[4,6]],[8,[2,7]],[9,2],[],[],[9,[4,7]],[10,7],[10,4],[8,[1,3]],[9,[3,6]],[10,6],[10,3],[9,[1,6]],[10,6],[10,1],[6,[1,7]],[7,[2,6]],[8,[2,7]],[9,2],[],[],[9,7],[],[],[8,[1,6]],[9,[6,7]],[10,6],[10,7],[9,[1,5]],[10,1],[10,5],[7,[4,6]],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[1,6]],[10,1],[10,6],[8,[5,7]],[9,5],[],[],[9,[4,7]],[10,7],[10,4],[5,[3,5]],[6,[1,7]],[7,[5,7]],[8,[1,4]],[9,[1,5]],[10,5],[10,1],[9,4],[],[],[8,[3,6]],[9,[6,7]],[10,7],[10,6],[9,[3,7]],[10,7],[10,3],[7,[1,5]],[8,[1,3]],[9,[3,6]],[10,6],[10,3],[9,[1,6]],[10,6],[10,1],[8,[5,7]],[9,[4,7]],[10,4],[10,7],[9,5],[],[],[6,[1,3]],[7,[5,7]],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,1],[],[],[8,[1,5]],[9,5],[],[],[9,1],[],[],[7,[1,4]],[8,[1,7]],[9,1],[],[],[9,[3,7]],[10,7],[10,3],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,3],[],[],[2,[5,6]],[3,[2,6]],[4,[5,7]],[5,[2,7]],[6,[2,4]],[7,[4,5]],[8,[3,5]],[9,3],[],[],[9,5],[],[],[8,[4,6]],[9,[4,7]],[10,4],[10,7],[9,[6,7]],[10,6],[10,7],[7,[3,5]],[8,[2,5]],[9,[2,3]],[10,3],[10,2],[9,[1,5]],[10,5],[10,1],[8,[2,3]],[9,[2,5]],[10,5],[10,2],[9,[1,3]],[10,3],[10,1],[6,[1,3]],[7,[4,7]],[8,[3,7]],[9,[3,5]],[10,5],[10,3],[9,[1,7]],[10,7],[10,1],[8,[2,4]],[9,2],[],[],[9,[1,4]],[10,4],[10,1],[7,[3,5]],[8,[1,5]],[9,5],[],[],[9,[1,7]],[10,1],[10,7],[8,[1,7]],[9,1],[],[],[9,[3,7]],[10,7],[10,3],[5,[2,5]],[6,[2,4]],[7,[3,5]],[8,[3,7]],[9,3],[],[],[9,[4,7]],[10,7],[10,4],[8,[4,5]],[9,[4,7]],[10,7],[10,4],[9,5],[],[],[7,[3,7]],[8,[2,7]],[9,[2,3]],[10,3],[10,2],[9,[1,7]],[10,7],[10,1],[8,[2,3]],[9,[2,7]],[10,7],[10,2],[9,[1,3]],[10,3],[10,1],[6,[3,5]],[7,[1,3]],[8,[3,7]],[9,7],[],[],[9,3],[],[],[8,[1,5]],[9,[1,7]],[10,7],[10,1],[9,5],[],[],[7,[4,5]],[8,[1,3]],[9,[1,5]],[10,5],[10,1],[9,3],[],[],[8,[1,4]],[9,[2,4]],[10,2],[10,4],[9,[1,3]],[10,1],[10,3],[4,[3,6]],[5,[3,5]],[6,[1,3]],[7,[5,7]],[8,5],[],[],[],[],[],[],[8,[3,7]],[9,7],[],[],[9,3],[],[],[7,[1,7]],[8,[1,5]],[9,[5,7]],[10,5],[10,7],[9,[1,6]],[10,1],[10,6],[8,[5,7]],[9,[6,7]],[10,6],[10,7],[9,[1,5]],[10,1],[10,5],[6,[1,7]],[7,[3,7]],[8,[1,3]],[9,3],[],[],[9,[1,6]],[10,1],[10,6],[8,[5,7]],[9,[4,7]],[10,7],[10,4],[9,[4,5]],[10,5],[10,4],[7,[1,3]],[8,[4,5]],[9,[1,5]],[10,5],[10,1],[9,[1,4]],[10,4],[10,1],[8,[3,7]],[9,[6,7]],[10,6],[10,7],[9,3],[],[],[5,[1,4]],[6,[4,7]],[7,[2,4]],[8,2],[],[],[],[],[],[],[8,[6,7]],[9,[4,6]],[10,6],[10,4],[9,[5,7]],[10,7],[10,5],[7,[6,7]],[8,[2,7]],[9,2],[],[],[9,[1,7]],[10,7],[10,1],[8,[4,6]],[9,[4,5]],[10,5],[10,4],[9,[1,6]],[10,6],[10,1],[6,[1,7]],[7,[1,3]],[8,[6,7]],[9,[1,6]],[10,6],[10,1],[9,[5,7]],[10,7],[10,5],[8,3],[],[],[],[],[],[],[7,[6,7]],[8,[3,7]],[9,3],[],[],[9,[4,7]],[10,7],[10,4],[8,[1,6]],[9,[1,5]],[10,5],[10,1],[9,[4,6]],[10,6],[10,4],[3,[2,5]],[4,[2,3]],[5,[2,4]],[6,[4,7]],[7,[3,6]],[8,[3,7]],[9,3],[],[],[9,7],[],[],[8,[4,6]],[9,[6,7]],[10,6],[10,7],[9,[4,5]],[10,4],[10,5],[7,[2,6]],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[4,6]],[10,4],[10,6],[8,[5,7]],[9,5],[],[],[9,[2,7]],[10,7],[10,2],[6,[6,7]],[7,[2,7]],[8,[2,6]],[9,[3,6]],[10,3],[10,6],[9,2],[],[],[8,[1,4]],[9,[4,7]],[10,7],[10,4],[9,[1,7]],[10,7],[10,1],[7,[2,6]],[8,[2,7]],[9,[3,7]],[10,3],[10,7],[9,2],[],[],[8,[1,4]],[9,[4,6]],[10,6],[10,4],[9,[1,6]],[10,6],[10,1],[5,[1,3]],[6,[6,7]],[7,[3,7]],[8,[2,6]],[9,2],[],[],[9,[3,6]],[10,6],[10,3],[8,[1,4]],[9,[4,7]],[10,7],[10,4],[9,[1,7]],[10,7],[10,1],[7,[3,6]],[8,[2,7]],[9,2],[],[],[9,[3,7]],[10,7],[10,3],[8,[1,4]],[9,[4,6]],[10,6],[10,4],[9,[1,6]],[10,6],[10,1],[6,[2,6]],[7,[2,7]],[8,2],[],[],[],[],[],[],[8,[1,7]],[9,7],[],[],[9,1],[],[],[7,[6,7]],[8,[1,7]],[9,[1,6]],[10,6],[10,1],[9,[3,7]],[10,7],[10,3],[8,[1,6]],[9,[1,7]],[10,7],[10,1],[9,[3,6]],[10,6],[10,3],[4,[3,5]],[5,[1,3]],[6,[1,4]],[7,[6,7]],[8,[3,7]],[9,[3,6]],[10,6],[10,3],[9,[4,7]],[10,7],[10,4],[8,[3,6]],[9,[3,7]],[10,7],[10,3],[9,[4,6]],[10,6],[10,4],[7,[6,7]],[8,[3,7]],[9,[3,6]],[10,6],[10,3],[9,[1,7]],[10,7],[10,1],[8,[3,6]],[9,[3,7]],[10,7],[10,3],[9,[1,6]],[10,6],[10,1],[6,[5,7]],[7,[1,5]],[8,[1,6]],[9,6],[],[],[9,1],[],[],[8,5],[],[],[],[],[],[],[7,[6,7]],[8,[1,7]],[9,[1,6]],[10,6],[10,1],[9,[3,7]],[10,7],[10,3],[8,[1,6]],[9,[1,7]],[10,7],[10,1],[9,[3,6]],[10,6],[10,3],[5,[5,7]],[6,[1,4]],[7,[2,4]],[8,[2,7]],[9,2],[],[],[9,[1,7]],[10,7],[10,1],[8,[4,7]],[9,[4,5]],[10,5],[10,4],[9,[1,7]],[10,7],[10,1],[7,[1,3]],[8,[1,7]],[9,[1,5]],[10,5],[10,1],[9,[4,7]],[10,7],[10,4],[8,[3,7]],[9,3],[],[],[9,[4,7]],[10,7],[10,4],[6,[1,4]],[7,[4,5]],[8,[4,6]],[9,[6,7]],[10,7],[10,6],[9,[4,7]],[10,7],[10,4],[8,[1,5]],[9,5],[],[],[9,1],[],[],[7,[1,5]],[8,[1,6]],[9,[6,7]],[10,7],[10,6],[9,[1,7]],[10,7],[10,1],[8,[4,5]],[9,5],[],[],[9,4],[],[],[1,[3,4]],[2,[5,6]],[3,[2,5]],[4,[3,5]],[5,[5,7]],[6,[1,4]],[7,[1,5]],[8,[4,5]],[9,4],[],[],[9,5],[],[],[8,[1,6]],[9,[1,7]],[10,1],[10,7],[9,[6,7]],[10,6],[10,7],[7,[4,5]],[8,[1,5]],[9,1],[],[],[9,5],[],[],[8,[4,6]],[9,[4,7]],[10,4],[10,7],[9,[6,7]],[10,6],[10,7],[6,[1,4]],[7,[1,3]],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,3],[],[],[8,[1,7]],[9,[4,7]],[10,4],[10,7],[9,[1,5]],[10,1],[10,5],[7,[2,4]],[8,[4,7]],[9,[1,7]],[10,1],[10,7],[9,[4,5]],[10,4],[10,5],[8,[2,7]],[9,[1,7]],[10,1],[10,7],[9,2],[],[],[5,[1,3]],[6,[5,7]],[7,[6,7]],[8,[1,6]],[9,[3,6]],[10,3],[10,6],[9,[1,7]],[10,1],[10,7],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,[1,6]],[10,1],[10,6],[7,[1,5]],[8,5],[],[],[],[],[],[],[8,[1,6]],[9,1],[],[],[9,6],[],[],[6,[1,4]],[7,[6,7]],[8,[3,6]],[9,[1,6]],[10,1],[10,6],[9,[3,7]],[10,3],[10,7],[8,[3,7]],[9,[1,7]],[10,1],[10,7],[9,[3,6]],[10,3],[10,6],[7,[6,7]],[8,[3,6]],[9,[4,6]],[10,4],[10,6],[9,[3,7]],[10,3],[10,7],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,[3,6]],[10,3],[10,6],[4,[2,3]],[5,[1,3]],[6,[2,6]],[7,[6,7]],[8,[1,6]],[9,[3,6]],[10,3],[10,6],[9,[1,7]],[10,1],[10,7],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,[1,6]],[10,1],[10,6],[7,[2,7]],[8,[1,7]],[9,1],[],[],[9,7],[],[],[8,2],[],[],[],[],[],[],[6,[6,7]],[7,[3,6]],[8,[1,4]],[9,[1,6]],[10,1],[10,6],[9,[4,6]],[10,4],[10,6],[8,[2,7]],[9,[3,7]],[10,3],[10,7],[9,2],[],[],[7,[3,7]],[8,[1,4]],[9,[1,7]],[10,1],[10,7],[9,[4,7]],[10,4],[10,7],[8,[2,6]],[9,[3,6]],[10,3],[10,6],[9,2],[],[],[5,[2,4]],[6,[6,7]],[7,[2,6]],[8,[1,4]],[9,[1,6]],[10,1],[10,6],[9,[4,6]],[10,4],[10,6],[8,[2,7]],[9,2],[],[],[9,[3,7]],[10,7],[10,3],[7,[2,7]],[8,[1,4]],[9,[1,7]],[10,1],[10,7],[9,[4,7]],[10,4],[10,7],[8,[2,6]],[9,2],[],[],[9,[3,6]],[10,6],[10,3],[6,[4,7]],[7,[2,6]],[8,[5,7]],[9,[2,7]],[10,2],[10,7],[9,5],[],[],[8,[6,7]],[9,[4,6]],[10,6],[10,4],[9,[5,7]],[10,7],[10,5],[7,[3,6]],[8,[4,6]],[9,[4,5]],[10,5],[10,4],[9,[6,7]],[10,7],[10,6],[8,[3,7]],[9,7],[],[],[9,3],[],[],[3,[2,6]],[4,[3,6]],[5,[1,4]],[6,[1,7]],[7,[6,7]],[8,[1,6]],[9,[4,6]],[10,4],[10,6],[9,[1,5]],[10,1],[10,5],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,3],[],[],[7,[1,3]],[8,3],[],[],[],[],[],[],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[1,6]],[10,1],[10,6],[6,[4,7]],[7,[6,7]],[8,[4,6]],[9,[1,6]],[10,1],[10,6],[9,[4,5]],[10,4],[10,5],[8,[2,7]],[9,[1,7]],[10,1],[10,7],[9,2],[],[],[7,[2,4]],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[4,6]],[10,4],[10,6],[8,2],[],[],[],[],[],[],[5,[3,5]],[6,[1,7]],[7,[1,3]],[8,[3,7]],[9,3],[],[],[9,[6,7]],[10,7],[10,6],[8,[4,5]],[9,[1,4]],[10,1],[10,4],[9,[1,5]],[10,1],[10,5],[7,[3,7]],[8,[5,7]],[9,[4,5]],[10,4],[10,5],[9,[4,7]],[10,4],[10,7],[8,[1,3]],[9,[1,6]],[10,6],[10,1],[9,3],[],[],[6,[1,3]],[7,[1,7]],[8,[5,7]],[9,[1,5]],[10,5],[10,1],[9,[6,7]],[10,7],[10,6],[8,[1,5]],[9,[1,6]],[10,6],[10,1],[9,[5,7]],[10,7],[10,5],[7,[5,7]],[8,[3,7]],[9,3],[],[],[9,7],[],[],[8,5],[],[],[],[],[],[],[4,[5,7]],[5,[2,5]],[6,[3,5]],[7,[4,5]],[8,[1,4]],[9,[1,3]],[10,3],[10,1],[9,[2,4]],[10,4],[10,2],[8,[1,3]],[9,3],[],[],[9,[1,5]],[10,1],[10,5],[7,[1,3]],[8,[1,5]],[9,5],[],[],[9,[1,7]],[10,1],[10,7],[8,[3,7]],[9,3],[],[],[9,7],[],[],[6,[2,4]],[7,[3,7]],[8,[2,3]],[9,[1,3]],[10,1],[10,3],[9,[2,7]],[10,2],[10,7],[8,[2,7]],[9,[1,7]],[10,1],[10,7],[9,[2,3]],[10,2],[10,3],[7,[3,5]],[8,[4,5]],[9,5],[],[],[9,[4,7]],[10,4],[10,7],[8,[3,7]],[9,[4,7]],[10,4],[10,7],[9,3],[],[],[5,[2,7]],[6,[1,3]],[7,[3,5]],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,1],[],[],[8,[1,5]],[9,[1,7]],[10,7],[10,1],[9,5],[],[],[7,[4,7]],[8,[2,4]],[9,[1,4]],[10,1],[10,4],[9,2],[],[],[8,[3,7]],[9,[1,7]],[10,1],[10,7],[9,[3,5]],[10,3],[10,5],[6,[2,4]],[7,[3,5]],[8,[2,3]],[9,[1,3]],[10,1],[10,3],[9,[2,5]],[10,2],[10,5],[8,[2,5]],[9,[1,5]],[10,1],[10,5],[9,[2,3]],[10,2],[10,3],[7,[4,5]],[8,[4,6]],[9,[6,7]],[10,7],[10,6],[9,[4,7]],[10,7],[10,4],[8,[3,5]],[9,5],[],[],[9,3],[],[],[2,[2,4]],[3,[5,6]],[4,[4,5]],[5,[3,5]],[6,[1,3]],[7,[1,4]],[8,[3,7]],[9,3],[],[],[9,[4,7]],[10,7],[10,4],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,1],[],[],[7,[5,7]],[8,[1,5]],[9,1],[],[],[9,5],[],[],[8,[1,7]],[9,1],[],[],[9,[3,7]],[10,7],[10,3],[6,[1,7]],[7,[1,5]],[8,[5,7]],[9,5],[],[],[9,[4,7]],[10,7],[10,4],[8,[1,3]],[9,[1,6]],[10,1],[10,6],[9,[3,6]],[10,3],[10,6],[7,[5,7]],[8,[3,6]],[9,[3,7]],[10,3],[10,7],[9,[6,7]],[10,6],[10,7],[8,[1,4]],[9,4],[],[],[9,[1,5]],[10,1],[10,5],[5,[1,4]],[6,[1,7]],[7,[4,6]],[8,[5,7]],[9,[4,7]],[10,4],[10,7],[9,5],[],[],[8,[6,7]],[9,[1,6]],[10,6],[10,1],[9,[5,7]],[10,7],[10,5],[7,[2,6]],[8,[1,6]],[9,[1,5]],[10,5],[10,1],[9,[6,7]],[10,7],[10,6],[8,[2,7]],[9,7],[],[],[9,2],[],[],[6,[6,7]],[7,[4,6]],[8,[1,3]],[9,[1,6]],[10,1],[10,6],[9,[3,6]],[10,3],[10,6],[8,[2,7]],[9,[4,7]],[10,4],[10,7],[9,2],[],[],[7,[4,7]],[8,[1,3]],[9,[1,7]],[10,1],[10,7],[9,[3,7]],[10,3],[10,7],[8,[2,6]],[9,[4,6]],[10,4],[10,6],[9,2],[],[],[4,[1,7]],[5,[3,5]],[6,[1,4]],[7,[6,7]],[8,[4,6]],[9,[3,6]],[10,3],[10,6],[9,[4,7]],[10,4],[10,7],[8,[4,7]],[9,[3,7]],[10,3],[10,7],[9,[4,6]],[10,4],[10,6],[7,[3,6]],[8,[1,3]],[9,[3,7]],[10,3],[10,7],[9,[1,6]],[10,1],[10,6],[8,[1,6]],[9,[6,7]],[10,6],[10,7],[9,[1,3]],[10,1],[10,3],[6,[5,7]],[7,[1,4]],[8,[4,5]],[9,[4,6]],[10,6],[10,4],[9,[1,5]],[10,5],[10,1],[8,[1,5]],[9,[1,6]],[10,6],[10,1],[9,[4,5]],[10,5],[10,4],[7,[4,6]],[8,[6,7]],[9,[1,6]],[10,6],[10,1],[9,[4,7]],[10,7],[10,4],[8,[4,7]],[9,[1,4]],[10,4],[10,1],[9,[6,7]],[10,7],[10,6],[5,[4,6]],[6,[1,3]],[7,[5,7]],[8,5],[],[],[],[],[],[],[8,[1,6]],[9,[1,4]],[10,4],[10,1],[9,[6,7]],[10,7],[10,6],[7,[3,7]],[8,[3,6]],[9,[6,7]],[10,6],[10,7],[9,[3,5]],[10,3],[10,5],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[3,6]],[10,3],[10,6],[6,[4,5]],[7,[4,7]],[8,[3,5]],[9,[3,7]],[10,3],[10,7],[9,[5,7]],[10,5],[10,7],[8,[1,4]],[9,[1,6]],[10,6],[10,1],[9,4],[],[],[7,[5,7]],[8,[2,7]],[9,[4,7]],[10,4],[10,7],[9,2],[],[],[8,[1,5]],[9,[1,6]],[10,6],[10,1],[9,[2,5]],[10,5],[10,2],[3,[5,6]],[4,[2,5]],[5,[3,5]],[6,[5,7]],[7,[1,3]],[8,3],[],[],[],[],[],[],[8,[1,5]],[9,1],[],[],[9,5],[],[],[7,[3,7]],[8,[1,7]],[9,[1,3]],[10,3],[10,1],[9,[2,7]],[10,7],[10,2],[8,[1,3]],[9,[1,7]],[10,7],[10,1],[9,[2,3]],[10,3],[10,2],[6,[1,3]],[7,[1,7]],[8,[1,5]],[9,[5,7]],[10,5],[10,7],[9,[1,6]],[10,1],[10,6],[8,[5,7]],[9,[6,7]],[10,6],[10,7],[9,[1,5]],[10,1],[10,5],[7,[5,7]],[8,[3,6]],[9,[3,7]],[10,3],[10,7],[9,[6,7]],[10,6],[10,7],[8,5],[],[],[],[],[],[],[5,[2,6]],[6,[3,7]],[7,[2,3]],[8,[1,3]],[9,[1,6]],[10,1],[10,6],[9,[3,6]],[10,3],[10,6],[8,[5,7]],[9,[2,7]],[10,2],[10,7],[9,5],[],[],[7,[2,7]],[8,[1,6]],[9,[1,7]],[10,1],[10,7],[9,[6,7]],[10,6],[10,7],[8,[3,5]],[9,5],[],[],[9,[2,3]],[10,2],[10,3],[6,[3,7]],[7,[3,5]],[8,[5,7]],[9,[6,7]],[10,6],[10,7],[9,5],[],[],[8,[3,6]],[9,[6,7]],[10,6],[10,7],[9,[2,3]],[10,2],[10,3],[7,[6,7]],[8,[2,7]],[9,2],[],[],[9,[4,7]],[10,7],[10,4],[8,[3,6]],[9,[3,5]],[10,5],[10,3],[9,[4,6]],[10,6],[10,4],[4,[2,6]],[5,[1,3]],[6,[3,5]],[7,[6,7]],[8,[1,6]],[9,[3,6]],[10,3],[10,6],[9,[1,7]],[10,1],[10,7],[8,[1,7]],[9,[3,7]],[10,3],[10,7],[9,[1,6]],[10,1],[10,6],[7,[1,7]],[8,[1,6]],[9,[6,7]],[10,6],[10,7],[9,[1,5]],[10,1],[10,5],[8,[6,7]],[9,[5,7]],[10,5],[10,7],[9,[1,6]],[10,1],[10,6],[6,[3,7]],[7,[6,7]],[8,[3,6]],[9,[1,6]],[10,1],[10,6],[9,[3,5]],[10,3],[10,5],[8,[2,7]],[9,[1,7]],[10,1],[10,7],[9,2],[],[],[7,[3,5]],[8,[3,6]],[9,[2,3]],[10,3],[10,2],[9,[6,7]],[10,7],[10,6],[8,[5,7]],[9,5],[],[],[9,[6,7]],[10,7],[10,6],[5,[2,5]],[6,[3,7]],[7,[2,3]],[8,[3,5]],[9,[1,3]],[10,1],[10,3],[9,[1,5]],[10,1],[10,5],[8,[2,7]],[9,2],[],[],[9,[6,7]],[10,7],[10,6],[7,[2,7]],[8,[5,7]],[9,[1,5]],[10,1],[10,5],[9,[1,7]],[10,1],[10,7],[8,[3,6]],[9,6],[],[],[9,[2,3]],[10,2],[10,3],[6,[5,7]],[7,[2,7]],[8,[3,5]],[9,5],[],[],[9,[2,3]],[10,2],[10,3],[8,[3,7]],[9,[3,5]],[10,5],[10,3],[9,[4,7]],[10,7],[10,4],[7,[3,5]],[8,[3,6]],[9,[6,7]],[10,7],[10,6],[9,[3,7]],[10,7],[10,3],[8,[4,5]],[9,5],[],[],[9,4],[],[]]";
// ---------------------------------------------------------------

  

function get_variable_name(i) {
    return String.fromCharCode(97 + Number(i) - 1);
}

function replace_2(str, pattern, len, newvalue, i0, i1) {
    var m;
    do {
        var re = new RegExp(pattern, "g");
        m = re.exec(str);
		if (m) {
            var complete = m[0];

            var n0 = m.groups["n0"];
            var n1 = m.groups["n1"];
            var vars = [n0, n1];

			var dummy = ",[]".repeat(len - 1);

            tmp = `['x',${len},'${newvalue}(${get_variable_name(vars[i0])},${get_variable_name(vars[i1])})']${dummy}`
            str = str.replace(complete, tmp)
        }
    } while (m);

    return str;
}

function replace_4(str, pattern, len, newvalue, i0, i1, i2, i3) {
    // var re = new RegExp(pattern, "g");
    
    var m;
    do {
        var re = new RegExp(pattern, "g");
        m = re.exec(str);
		if (m) {
            var complete = m[0];

            var n0 = m.groups["n0"];
            var n1 = m.groups["n1"];
            var n2 = m.groups["n2"];
            var n3 = m.groups["n3"];
            var vars = [n0, n1, n2, n3];

			var dummy = ",[]".repeat(len - 1);

            tmp = `['x',${len},'${newvalue}(${get_variable_name(vars[i0])},${get_variable_name(vars[i1])},${get_variable_name(vars[i2])},${get_variable_name(vars[i3])})']${dummy}`
            str = str.replace(complete, tmp)
        }
    } while (m);

    return str;
}

function replace_3(str, pattern, len, newvalue, i0, i1, i2) {
    var m;
    do {
        var re = new RegExp(pattern, "g");
        m = re.exec(str);
		if (m) {
            var complete = m[0];

            var n0 = m.groups["n0"];
            var n1 = m.groups["n1"];
            var n2 = m.groups["n2"];
            var vars = [n0, n1, n2];

			var dummy = ",[]".repeat(len - 1);

            tmp = `['x',${len},'${newvalue}(${get_variable_name(vars[i0])},${get_variable_name(vars[i1])},${get_variable_name(vars[i2])})']${dummy}`
            str = str.replace(complete, tmp)
        }
    } while (m);

    return str;
}


function indent(pattern, str) {
    
    var m;
    do {
        var re = new RegExp(pattern, "g");
        m = re.exec(str);
        if (m) {
            var complete = m[0];
            var n = Number(m[1]);

            var tabs = "\t".repeat(n);

            tmp = `${tabs}${complete.slice(0, -1)}\n`
            str = str.replace(complete, tmp)
            // console.log(str)

        }
    } while (m);

    return str;
}


// s = data_n5;
s = data_n7;

// var xxx = JSON.parse(data_n7);
// console.log(xxx.length)


s = replace_4(s, pattern1n2, 15, 'select_1_4_ab', 2, 3, 0, 1);
s = replace_4(s, pattern3n3, 15, 'select_1_4_ab', 2, 3, 0, 1);
s = replace_4(s, pattern4n4, 15, 'select_2_4_ab', 3, 2, 0, 1);
s = replace_4(s, pattern5n6, 15, 'select_2_4_ab', 3, 2, 0, 1);

s = replace_4(s, pattern_select_1_4_ab_cd__1, 7, 'select_1_4_ab_cd', 0, 2, 1, 3);
s = replace_4(s, pattern_select_1_4_ab_cd__2, 7, 'select_1_4_ab_cd', 0, 2, 1, 3);
s = replace_4(s, pattern_select_1_4_ab_cd__3, 7, 'select_1_4_ab_cd', 0, 2, 1, 3);
s = replace_4(s, pattern_select_1_4_ab_cd__4, 7, 'select_1_4_ab_cd', 0, 2, 1, 3);
s = replace_4(s, pattern_select_1_4_ab_cd__5, 7, 'select_1_4_ab_cd', 0, 2, 1, 3);

s = replace_4(s, pattern_select_2_4_ab_cd__1, 7, 'select_2_4_ab_cd', 3, 0, 2, 1);
s = replace_4(s, pattern_select_2_4_ab_cd__2, 7, 'select_2_4_ab_cd', 3, 0, 2, 1);
s = replace_4(s, pattern_select_2_4_ab_cd__3, 7, 'select_2_4_ab_cd', 3, 0, 2, 1);

s = replace_3(s, pattern_select_0_3, 7, 'select_0_3', 0, 1, 2);
s = replace_3(s, pattern_select_2_3, 7, 'select_0_3', 0, 1, 2);
s = replace_3(s, pattern_select_1_3_ab__1, 7, 'select_1_3_ab', 2, 1, 0);
s = replace_3(s, pattern_select_1_3_ab__2, 7, 'select_1_3_ab', 0, 2, 1);











// s = replace_2(s, pattern_max, 3, 'max', 0, 1);
// s = replace_2(s, pattern_max_2, 7, 'max', 0, 1);
// s = replace_2(s, pattern_min, 3, 'min', 0, 1);
// s = replace_2(s, pattern_min_2, 7, 'min', 0, 1);










// s = indent(pattern_indenter_1, s);
// s = indent(pattern_indenter_2, s);
// s = indent(pattern_indenter_3, s);


console.log(s)
